options:
  # don't touch thanks
  skp: &f[&6Skript&e+&f]  
  skp.ver: 1.0.0

import:
  java.io.File
  java.util.Scanner
  java.io.FileInputStream


# override the /sk command
on command:
  if command is "sk" or "skript":
    cancel event
    make sender execute command "skp %arguments%"

command /skp [<string>] [<string>] [<string>]:
  trigger:
    if arg-1 isn't set:
      skp_send_help_message(sender)
      
    else if arg-1 is "reload":
      if arg-2 isn't set:
        send "{@skp} &fPlease define what to reload." to sender
        stop
      stop
    
    else if arg-1 is "enable":
      if arg-2 isn't set:
        send "{@skp} &fPlease define what to enable." to sender
        stop
      stop
       
    else if arg-1 is "disable":
      if arg-2 isn't set:
        send "{@skp} &fPlease define what to disable." to sender
        stop
      else if script arg-1 isn't loaded:
        send "{@skp} &fScript is already disabled or doesn't exist." to sender
        stop
        
      disable script "%arg-1%.sk"
      send "{@skp} &fDisabled &e%arg-1%.sk&f." to sender
    
    else if arg-1 is "info":
      skp_send_info_message(sender)
    
    else if arg-1 is "addon":
      if arg-2 is "delete":
        if arg-3 isn't set:
          send "&cPlease define the addon you want to delete." to sender
          stop
        else if plugin arg-3 isn't enabled:
          send "{@skp} &fAddon not found." to sender
          stop
        set {_file} to skp_get_file_of_plugin(arg-3)
        {_file}.delete()
        send "{@skp} &fDeleted &e%arg-3%&f. Please restart your server." to sender

      else if arg-2 is "download":
        if arg-3 isn't set:
          send "&cPlease define the addon name." to sender
          stop
        set {_properties} to skp_get_addon_properties()
        set {_repo} to try {_properties}.getProperty((lowercase arg-3))
        if {_repo} isn't set:
          send "{@skp} &fCouldn't find that addon in &eaddon.properties&f file." to sender
          stop
        skp send a "GET" request to "https://api.github.com/repos/%{_repo}%/releases/latest" and store it in {_response}
        set {_file.name} to skp_get_file_name_from_response({_response})
        set {_download.link} to skp_get_download_link_from_response({_response})
        skp download file from {_download.link} and store it inside "./plugins/%{_file.name}%"
        send "{@skp} &fDownloaded addon &e%arg-3%&f. Please restart your server." to sender
    
  
    else if arg-1 is "analyse":
      if arg-2 isn't set:
        send "{@skp} &fPlease define the script you want to analyse." to sender
        stop
      set {_fis} to new FileInputStream("./plugins/Skript/scripts/%arg-2%.sk")
      if {_fis} isn't set:
        send "{@skp} &fFile not found." to sender
      set {_scanner} to new Scanner({_fis})
      set {_result} to "! Warning !%nl%Parsing times may be inaccurate because Skript wasn't made to parse code line by line!%nl%Only use these parsing times as an estimate.%nl%Analysed by SkriptPlus%nl%%nl%"
      while {_scanner}.hasNextLine():
        set {_line} to {_scanner}.nextLine()
        {_line} doesn't match "[\s]+##"
        set {_time} to skp_get_parse_time({_line})
        set {_result} to "%{_result}%(%{_time}%ms) %{_line}% %nl%"
      skp send a "POST" request to "https://api.mclo.gs/1/log" with data "content=%{_result}%" and store it in {_response}
      set {_link} to skp_get_log_link_from_response({_response})
      send "{@skp} Analysed %arg-2%! %{_link}%" to sender
      
    else if arg-1 is "dump":
      skp_send_dump_link(sender)
    
    else:
      send "&cUnknown command." to sender
      
function skp_send_help_message(p: object):
  send "welcome to skript+" to {_p}

function skp_send_info_message(p: object):
  send "Please wait..." to {_p}
  skp get the latest version of "skript" and store it in {_skript.ver}
  skp get the latest version of "skript-plus" and store it in {_skp.ver}
  skp check the updates for all addons and store it in {_addons::*}
  skp check the updates for all dependencies and store it in {_dependencies::*}
  
  if {_skript.ver} != skript version:
    set {_skript.ver} to "&c%skript version% &7-> &a%{_skript.ver}%"
  else:
    set {_skript.ver} to "&a%{_skript.ver}%"
    
  if {_skp.ver} != "{@skp.ver}":
    set {_skp.ver} to "&c{@skp.ver} &7-> &a%{_skp.ver}%"
  else:
    set {_skp.ver} to "&a{@skp.ver}"
       
  send "&7--------[ &6Skript&e+ &fInfo &7]--------" to {_p}
  send "Skript Version: %{_skript.ver}%" to {_p}
  send "Skript+ Version: %{_skp.ver}%" to {_p}
  send "" and {_addons::*} to {_p}
  send "" and {_dependencies::*} to {_p}

function skp_send_dump_link(p: object):
  set {_dump} to skp_gen_dump()
  skp send a "POST" request to "https://api.mclo.gs/1/log" with data "content=%{_dump}%" and store it in {_response}
  set {_link} to skp_get_log_link_from_response({_response})
  send "&aDump generated! %{_link}%" to {_p}
  